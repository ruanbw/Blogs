import{_ as s,o as a,c as n,X as e}from"./chunks/framework.6a0b272d.js";const D=JSON.parse('{"title":"Github Actions 自动化部署 Vitepress","description":"","frontmatter":{},"headers":[],"relativePath":"pages/operation/Github Actions自动化部署Vitepress项目.md","filePath":"pages/operation/Github Actions自动化部署Vitepress项目.md","lastUpdated":1694348019000}'),p={name:"pages/operation/Github Actions自动化部署Vitepress项目.md"},l=e(`<h1 id="github-actions-自动化部署-vitepress" tabindex="-1">Github Actions 自动化部署 Vitepress <a class="header-anchor" href="#github-actions-自动化部署-vitepress" aria-label="Permalink to &quot;Github Actions 自动化部署 Vitepress&quot;">​</a></h1><p>使用 Github Actions 自动化部署 Vitepress 项目，实现提交代码自动部署静态页面</p><h2 id="什么是-github-actions" tabindex="-1">什么是 Github Actions ? <a class="header-anchor" href="#什么是-github-actions" aria-label="Permalink to &quot;什么是 Github Actions ?&quot;">​</a></h2><p>itHub Actions 是 GitHub 提供的一项持续集成和部署服务。它允许您在代码仓库中自动化执行各种任务，如构建、测试、部署和其他自定义工作流程。</p><p>使用 GitHub Actions，您可以创建一个包含多个步骤的工作流程，每个步骤都可以在不同的操作系统和环境中运行。每个步骤可以使用预定义的操作（例如构建工具、测试框架、部署工具等）或自定义脚本来完成特定的任务。</p><p>GitHub Actions 可以与 GitHub 的事件触发器（例如推送、拉取请求、问题创建等）结合使用，使您的工作流程可以在特定的事件发生时自动触发执行。</p><p>使用 GitHub Actions 的好处包括：</p><ul><li>自动化构建、测试和部署工作流程，减少人工操作和减轻开发人员的负担。</li><li>可以在多个操作系统和环境中运行，以确保您的代码在不同平台上的兼容性。</li><li>与 GitHub 无缝集成，可以直接在 GitHub 上查看工作流程的执行结果和日志。</li><li>支持自定义脚本和第三方工具，以满足您特定的需求。</li></ul><p>通过编写 <code>.github/workflows</code> 目录下的 YAML 文件，您可以定义和配置 GitHub Actions 的工作流程，并将其与您的 GitHub 仓库进行绑定。</p><p>总之，GitHub Actions 提供了一种强大而灵活的方式来自动化和管理软件开发过程中的各种任务和工作流程。</p><h2 id="什么是-vitepress" tabindex="-1">什么是 VitePress ? <a class="header-anchor" href="#什么是-vitepress" aria-label="Permalink to &quot;什么是 VitePress ?&quot;">​</a></h2><p>Vitepress 是一个基于 Vue.js 的静态网站生成器。它专注于为文档编写提供简洁、快速和易用的工具和环境。</p><p>Vitepress 基于 Vite 构建工具，利用了其快速的开发服务器和热重载功能，使您可以在开发文档时获得实时的预览和快速的反馈。</p><p>Vitepress 的主要特点包括：</p><ol><li><p><strong>Markdown 驱动</strong>：使用 Markdown 编写文档，可以使用 Markdown 的语法和标记来快速编写内容。</p></li><li><p><strong>Vue 组件支持</strong>：可以在 Markdown 中使用 Vue 组件，将其嵌入到文档中，以实现更复杂的交互和功能。</p></li><li><p><strong>快速的开发服务器</strong>：Vitepress 使用 Vite 的开发服务器，支持热重载和快速构建，可以在本地实时预览和调试文档。</p></li><li><p><strong>自定义主题</strong>：Vitepress 提供了一个灵活的主题系统，您可以根据需要自定义和扩展主题的外观和样式。</p></li><li><p><strong>自动化部署</strong>：Vitepress 可以轻松地在 GitHub Pages、Netlify、Vercel 等平台上进行部署，使您的文档可以方便地在线访问。</p></li></ol><p>Vitepress 的目标是提供一种简单、快速和灵活的方式来编写和发布文档。它适用于各种类型的文档，包括技术文档、API 文档、用户手册等。</p><p>总之，Vitepress 是一个现代化的静态网站生成器，为文档编写提供了一种简单、快速和易用的方式，使您可以专注于编写内容而不用担心复杂的配置和构建过程,旨在构建快速、以内容为中心的网站。简而言之，VitePress 获取用 Markdown 编写的源内容，为其应用主题，并生成可以轻松部署到任何地方的静态 HTML 页面。</p><p>VitePress 常常被用来制作一门技术、框架、库的使用文档</p><p>例如：</p><p><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress 官网</a></p><p><a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue3 官网</a> 一个前端的渐进式框架</p><p><a href="https://cn.vitejs.dev/" target="_blank" rel="noreferrer">Vite 官网</a> 一个前端工程的构建管理工具</p><p>......</p><p>以上这些官方网站都是用的VitePress进行制作</p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><h3 id="检查-ssh-秘钥" tabindex="-1">检查 ssh 秘钥 <a class="header-anchor" href="#检查-ssh-秘钥" aria-label="Permalink to &quot;检查 ssh 秘钥&quot;">​</a></h3><ul><li><p>这里以 Win11 为例，检查你的 ssh 秘钥是否存在系统中的 C:\\Users\\你的用户名\\.ssh 文件夹下 ，不存在则自行百度</p></li><li><p>如果存在，你会看到 id_rsa 和 id_rsa.pub 两个文件 id_rsa 是私钥 id_rsa.pub 是公钥</p></li></ul><h3 id="新建一个-github-仓库" tabindex="-1">新建一个 Github 仓库 <a class="header-anchor" href="#新建一个-github-仓库" aria-label="Permalink to &quot;新建一个 Github 仓库&quot;">​</a></h3><ul><li><p>这里以 2023 年 7 月 20 日 为标准，Github 可能会改版，页面样式或者选择肯不在我说的地方了</p></li><li><p>准备两个分支 master 和 gh-page</p></li><li><p>配置部署秘钥：仓库右上角的 Settings 中左侧的 Deploy keys 菜单中创建。Title 随便填，Key 填入 id_rsa.pub 文件中的内容，勾选上 Allow write access 选项，然后点击 Add key 即可。</p></li><li><p>配置Action秘钥：在仓库右上角的 Settings 中左侧的 Secrets and variables 菜单下的 Actions 选项中点击右上角的 New repository secret 绿色按钮创建，Name 随便填我这里写（VITEPRESS_BLOGS_TOKEN）后面会用到，Key 填入 id_rsa 文件中的内容，然后点击 Add secret 即可。</p></li><li><p>配置 Github Pages：在仓库右上角的 Settings 中左侧的 Pages 菜单中，选择 Source 项的值为 Deploy from a branch （意思是从分支中部署），选择下面 Branch 一项的第一个下拉框为 gh-page，第二个下拉框为根目录，点击保存即可。</p></li></ul><h3 id="按照官网的开始开始初始化一个-vitepress-项目点这里" tabindex="-1">按照官网的开始开始初始化一个 VitePress 项目<a href="https://vitepress.dev/guide/getting-started#installation" target="_blank" rel="noreferrer">点这里</a> <a class="header-anchor" href="#按照官网的开始开始初始化一个-vitepress-项目点这里" aria-label="Permalink to &quot;按照官网的开始开始初始化一个 VitePress 项目[点这里](https://vitepress.dev/guide/getting-started#installation)&quot;">​</a></h3><p>这里跳过...</p><h2 id="编写-deploy-yml" tabindex="-1">编写 deploy.yml <a class="header-anchor" href="#编写-deploy-yml" aria-label="Permalink to &quot;编写 deploy.yml&quot;">​</a></h2><p>在项目根目录创建一个 .github\\workflows\\deploy.yml 文件</p><div class="language-yml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Deploy</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 监听推送分支master，监听到的话会执行下面jobs任务</span></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">deploy</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">actions/checkout@v3</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">fetch-depth</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm/action-setup@v2</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">6.32.9</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">actions/setup-node@v3</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">node-version</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">18</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">cache</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm install &amp;&amp; pnpm docs:build</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;"># 部署到 GitHub Pages</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Deploy</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">deploy_key</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">\${{ secrets.VITEPRESS_BLOGS_TOKEN }}</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">publish_dir</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">docs/.vitepress/dist</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#F07178;">publish_branch</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">gh-pages</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><div class="info custom-block"><p class="custom-block-title">提示</p><p>secrets.VITEPRESS_BLOGS_TOKEN 来自创建仓库右上角的 Settings 中左侧的 Secrets and variables 菜单下的 Actions 选项中创建</p></div><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><p>提交代码到仓库的 master 分支中，等待部署完成并查看部署页面</p><div class="info custom-block"><p class="custom-block-title">提示</p><ul><li>如果你要部署到 <a href="https://xn--github-on9iq72ai84fvk4b.github.io/%E5%BD%93%E5%89%8D%E4%BB%93%E5%BA%93%E5%90%8D" target="_blank" rel="noreferrer">https://你的github账号.github.io/当前仓库名</a> 这个地址时需要修改 vitepress 项目中的 docs/.vitepress/config.ts 文件中的 base 字段为你的仓库名</li><li>部署到 <a href="https://xn--github-on9iq72ai84fvk4b.github.io/" target="_blank" rel="noreferrer">https://你的github账号.github.io/</a> 则不需要</li></ul></div><h2 id="使用自定义域名" tabindex="-1">使用自定义域名 <a class="header-anchor" href="#使用自定义域名" aria-label="Permalink to &quot;使用自定义域名&quot;">​</a></h2><p>如果你不想使用 Github 提供给你的域名 <a href="https://xn--github-on9iq72ai84fvk4b.github.io/" target="_blank" rel="noreferrer">https://你的github账号.github.io/</a> 时</p><ul><li>准备一个域名</li><li>在域名购买平台添加域名解析</li></ul><p>这里以阿里云为例</p><p>1、在域名解析控制台中选择你的域名并点击域名解析设置并添加一条记录</p><p>2、记录类型选择 CNAME 、记录值可写可不写，这里我写 blog （具体可百度顶级域名和二级域名的区别）</p><p>3、记录值写 Github 提供给你的域名 <a href="https://xn--github-on9iq72ai84fvk4b.github.io/" target="_blank" rel="noreferrer">https://你的github账号.github.io/</a></p><ul><li>在仓库中配置</li></ul><p>1、打开仓库的 Pages 管理页面</p><p>2、把你的域名填到 Custom domain 中保存即可带等待一会就可以通过你的域名访问了，因为我 上面记录值写了 blog 我需要通过 blog.域名 进行访问</p>`,48),t=[l];function o(r,i,c,b,u,y){return a(),n("div",null,t)}const d=s(p,[["render",o]]);export{D as __pageData,d as default};
