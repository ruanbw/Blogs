import{_ as s,o as a,c as n,X as e}from"./chunks/framework.6a0b272d.js";const u=JSON.parse('{"title":"Nest JS","description":"","frontmatter":{},"headers":[],"relativePath":"pages/backend/nestjs.md","filePath":"pages/backend/nestjs.md","lastUpdated":1694790021000}'),l={name:"pages/backend/nestjs.md"},p=e(`<h1 id="nest-js" tabindex="-1">Nest JS <a class="header-anchor" href="#nest-js" aria-label="Permalink to &quot;Nest JS&quot;">​</a></h1><p>Nest（NestJS）是一个框架，用于构建高效，可扩展的Node.js服务器端应用程序。它使用渐进式JavaScript，使用TypeScript构建并完全支持TypeScript（但仍使开发人员能够使用纯JavaScript编码），并结合了OOP（面向对象编程），FP（函数式编程）和FRP（函数式响应式编程）的元素。</p><p>官方文档 <a href="https://nestjs.com/" target="_blank" rel="noreferrer">https://nestjs.com/</a></p><p>中文文档 <a href="https://nest.coding-time.cn/" target="_blank" rel="noreferrer">https://nest.coding-time.cn/</a></p><h2 id="nest-cli" tabindex="-1">Nest CLI <a class="header-anchor" href="#nest-cli" aria-label="Permalink to &quot;Nest CLI&quot;">​</a></h2><h3 id="全局安装" tabindex="-1">全局安装 <a class="header-anchor" href="#全局安装" aria-label="Permalink to &quot;全局安装&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@nestjs/cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="nest-cli-有哪些功能" tabindex="-1">Nest CLI 有哪些功能 <a class="header-anchor" href="#nest-cli-有哪些功能" aria-label="Permalink to &quot;Nest CLI 有哪些功能&quot;">​</a></h3><p>使用一下命令查看 Nest CLI 支持的功能</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">new</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">project_name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>nest</code>: Nest CLI 的全局命令</li><li><code>new</code>: Nest CLI 的全局命令中的新建项目</li><li><code>project_name</code>: 要创建的项目名</li></ul><h2 id="_5-中-http-数据传输方式" tabindex="-1">5 中 HTTP 数据传输方式 <a class="header-anchor" href="#_5-中-http-数据传输方式" aria-label="Permalink to &quot;5 中 HTTP 数据传输方式&quot;">​</a></h2><ul><li><p>text/plain;</p></li><li><p>application/json;</p></li><li><p>application/form-data;</p></li><li><p>application/x-www-form-urlencoded;</p></li><li><p>multipart/form-data;</p></li></ul><h2 id="ioc-容器" tabindex="-1">IOC 容器 <a class="header-anchor" href="#ioc-容器" aria-label="Permalink to &quot;IOC 容器&quot;">​</a></h2><h2 id="aop-架构" tabindex="-1">AOP 架构 <a class="header-anchor" href="#aop-架构" aria-label="Permalink to &quot;AOP 架构&quot;">​</a></h2><h2 id="如何调试-nest" tabindex="-1">如何调试 Nest <a class="header-anchor" href="#如何调试-nest" aria-label="Permalink to &quot;如何调试 Nest&quot;">​</a></h2><h3 id="_1、使用-console-log-进行调试" tabindex="-1">1、使用 <code>console.log</code> 进行调试 <a class="header-anchor" href="#_1、使用-console-log-进行调试" aria-label="Permalink to &quot;1、使用 \`console.log\` 进行调试&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> os </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">os</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> homedir </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">homedir</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(homedir)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>缺点是只能看到某个变量值，不能看到代码的整个执行路线</p><h3 id="_2、使用-node-的调试模式运行" tabindex="-1">2、使用 node 的调试模式运行 <a class="header-anchor" href="#_2、使用-node-的调试模式运行" aria-label="Permalink to &quot;2、使用 node 的调试模式运行&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--inspect-brk</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">index.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>--inspect</code> 是调试模式，而 <code>--inspect-brk</code> 还会在首行断住</p><p>它会起一个 ws 服务，然后我们用调试客户端连上它，比如<code>Chrome DevTools</code>。浏览器搜索栏中输入 <a href="./.html">chrome://inspect/</a> 就可以看到调试目标</p><h3 id="_3、使用-nest-cli-自带的-debug-功能" tabindex="-1">3、使用 Nest CLI 自带的 Debug 功能 <a class="header-anchor" href="#_3、使用-nest-cli-自带的-debug-功能" aria-label="Permalink to &quot;3、使用 Nest CLI 自带的 Debug 功能&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">start</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--debug</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="使用多种-provider-灵活注入对象" tabindex="-1">使用多种 Provider 灵活注入对象 <a class="header-anchor" href="#使用多种-provider-灵活注入对象" aria-label="Permalink to &quot;使用多种 Provider 灵活注入对象&quot;">​</a></h2><p>Provider 一般是用 @Injectable 修饰的 class</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Injectable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@nestjs/common</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Injectable</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">AppService</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">getHello</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello world !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在 Module 的 providers 里声明</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Module</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@nestjs/common</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">AppService</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./AppService</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Module</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">imports</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">providers</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;">[AppService]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">AppService</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="nest-中的装饰器" tabindex="-1">Nest 中的装饰器 <a class="header-anchor" href="#nest-中的装饰器" aria-label="Permalink to &quot;Nest 中的装饰器&quot;">​</a></h2><p><code>@Global</code></p><p><code>@Module</code></p><p><code>@Inject</code></p><p><code>@Get</code></p><p><code>@Post</code></p><p><code>@Put</code></p><p><code>@Delete</code></p><p><code>@Update</code></p><p><code>@Controller</code></p><p><code>@</code></p>`,43),o=[p];function t(r,c,i,d,y,D){return a(),n("div",null,o)}const b=s(l,[["render",t]]);export{u as __pageData,b as default};
